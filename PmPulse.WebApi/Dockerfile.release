# Stage 1: Build the webapp frontend
FROM node:22-alpine AS webapp-build
WORKDIR /app

# Copy webapp package files and install dependencies
COPY webapp/package*.json ./
RUN npm ci

# Copy webapp source code
COPY webapp/ .

# Copy WebApi directory structure to create wwwroot output path
COPY PmPulse.WebApi/PmPulse.WebApi.csproj ../PmPulse.WebApi/
RUN mkdir -p ../PmPulse.WebApi/wwwroot

# Build webapp - vite outputs to ../PmPulse.WebApi/wwwroot
RUN npm run build

# Stage 2: Build the .NET WebAPI application
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS webapi-build
WORKDIR /src

# Copy and restore project dependencies
COPY ["PmPulse.WebApi/PmPulse.WebApi.csproj", "PmPulse.WebApi/"]
COPY ["PmPulse.ServiceDefaults/PmPulse.ServiceDefaults.csproj", "PmPulse.ServiceDefaults/"]
COPY ["PmPulse.AppDomain/PmPulse.AppDomain.csproj", "PmPulse.AppDomain/"]
COPY ["PmPulse.GrainInterfaces/PmPulse.GrainInterfaces.csproj", "PmPulse.GrainInterfaces/"]
COPY ["PmPulse.GrainClasses/PmPulse.GrainClasses.csproj", "PmPulse.GrainClasses/"]
RUN dotnet restore "PmPulse.WebApi/PmPulse.WebApi.csproj"

# Copy all source code
COPY . .

# Copy the built webapp wwwroot from webapp-build stage
# The webapp was built in /app, vite outputs to ../PmPulse.WebApi/wwwroot (relative to /app)
# This creates /PmPulse.WebApi/wwwroot in the webapp-build stage
COPY --from=webapp-build /PmPulse.WebApi/wwwroot ./PmPulse.WebApi/wwwroot

WORKDIR "/src/PmPulse.WebApi"

# Build the .NET application
RUN dotnet build "PmPulse.WebApi.csproj" -c Release -o /app/build

# Stage 3: Publish the application
FROM webapi-build AS publish
RUN dotnet publish "PmPulse.WebApi.csproj" -c Release -o /app/publish /p:UseAppHost=false

# Stage 4: Runtime image
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS final
WORKDIR /app

# Set environment to Production
ENV ASPNETCORE_ENVIRONMENT=Production

EXPOSE 8080
EXPOSE 8443
EXPOSE 8081

# Copy published application (includes wwwroot)
COPY --from=publish /app/publish .

ENTRYPOINT ["dotnet", "PmPulse.WebApi.dll"]
